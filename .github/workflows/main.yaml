name: flutter_template

on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1.5.3

      - name: Install Dependencies
        run: flutter packages get

      - name: Format
        run: flutter format --set-exit-if-changed lib test

      - name: Analyze
        run: flutter analyze lib test

      - name: Run unit tests
        run: flutter test --no-pub --coverage --test-randomize-ordering-seed random

      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v1.2.0
  # id of job, a string that is unique to the "jobs" node above.
  drive:
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    strategy:
      # A set of different configurations of the virtual
      # environment.
      matrix:
        device:
        - "iPhone 8 (13.1)"
        - "iPhone 11 Pro Max (13.1)"
      # When set to true, GitHub cancels all in-progress jobs if any
      # matrix job fails.
      fail-fast: false
    # The type of machine to run the job on.
    runs-on: macOS-latest
    # Contains a sequence of tasks.
    steps:
    # A name for your step to display on GitHub.
    - name: "List all simulators"
      run: "xcrun simctl list"
    - name: "Start Simulator"
      run: |
        UDID=$(
          xcrun simctl list |
          awk \
            -F ' *[][]' \
            -v 'device=${{ matrix.device }}' \
            '$1 == device { print $2 }'
        )
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
    # The branch or tag ref that triggered the workflow will be
    # checked out.
    # https://github.com/actions/checkout
    - uses: actions/checkout@v1
    # Sets up a flutter environment.
    # https://github.com/marketplace/actions/flutter-action
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # or: 'dev' or 'beta'
    - name: "Run Flutter Driver tests"
      run: "flutter test --flavor development -d iPhone integration_test"
